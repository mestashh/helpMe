База знаний – термин, происходящий из области искусственного интеллекта, изначально обозначавший совокупность фактов и правил, используемых интеллектуальной системой (например, экспертной системой) для рассуждений.
В общем смысле база знаний (БЗ) – это структурированное хранилище знаний о некоторой предметной области, включающее не только факты, но и взаимосвязи между ними и, часто, механизмы вывода новых знаний. 
В отличие от просто базы данных, база знаний обычно подразумевает наличие логики: помимо данных о конкретных объектах, она содержит правила вывода и семантическую схему (онтологию), позволяющие делать автоматические умозаключения на основе имеющейся информации.
Например, в базе знаний могут храниться правила типа «если X – потомок Y, а Y – потомок Z, то X – потомок Z» вместе с генеалогическими фактами; система сможет вывести новые связи родства, основываясь на этих правилах. С развитием семантических технологий понятие базы знаний расширилось.
Теперь под базами знаний часто понимают большие графы знаний (knowledge graphs), такие как упомянутые Wikidata, DBpedia, Google Knowledge Graph и др., которые содержат множество фактов в формате, пригодном для обработки программами.
Машиночитаемая база знаний – это база знаний, представленная в формальном виде, доступном для алгоритмического вывода и запросов. RDF-графы с онтологиями – классический пример машиночитаемой БЗ:
они структурированы и снабжены семантикой, понятной компьютеру (через стандарты RDF, OWL, RDFS). Альтернативные принципы построения баз знаний: Исторически сложилось несколько подходов:
Реляционный (традиционный): знания хранятся в реляционных таблицах, схемы которых проектируются человеком. Это эффективно для транзакционных систем, но слабее подходит для представления разнообразных и эволюционирующих знаний.
Кроме того, базы данных не имеют встроенных механизмов логического вывода (хотя есть SQL-оболочки, допускающие рекурсию, но ограниченно).
Иерархический / сетевой: устаревшие модели, предшественники реляционной, где знания представлялись либо в жесткой иерархии (деревья), либо в произвольных сетях записей (но без логических аксиом).
Cемантические сети / графы (Knowledge Graphs): современные крупные БЗ используют графовую модель. Технологии Semantic Web (RDF/OWL) – один из вариантов, другой вариант – property graphs в NoSQL-графовых базах (Neo4j, JanusGraph и др.). Property graph хранит вершины и ребра,
у которых могут быть произвольные свойства (ключ-значение). Это менее строгий, но гибкий способ. Например, можно хранить узел «Человек: Алиса» со свойствами (имя="Алиса", возраст=30) и ребро «Дружит» к узлу «Боб» с свойством (с какого года = 2015).
Property graph-модели не всегда имеют формальную онтологию, но по сути тоже являются базами знаний, просто ближе к структурам данных, чем к логике.
Современные крупные базы знаний, как уже обсуждалось, обычно используют комбинацию подходов: семантический граф (RDF/OWL) для интероперабельности и логических выводов плюс при необходимости дополнительные механизмы
(например, правила SWRL или движки типа GraphQL/Gremlin для графовых обходов).
Машиночитаемые базы знаний :
Expert Systems KBs: как в медицинских экспертных системах – факты + правила, хранятся в формате, загружаемом в inference engine.
Semantic Web KBs: RDF-хранилища с онтологиями (например, база данных компаний, где каждая компания и сотрудник представлены URI и связями RDF, а OWL описывает классы Company, Person, relation worksFor и т.д.).
Инструменты для построения машиночитаемых баз знаний:
Онтологические редакторы: главный инструмент, чтобы начать – визуальные редакторы онтологий. Protégé – наиболее популярный, бесплатный, поддерживаемый Stanford. В Protégé можно вручную создавать классы, свойства, аксиомы OWL,
заполнять некоторыми данными, запускать reasoner для проверки консистентности и выводов. Также есть коммерческие (например, TopBraid Composer – IDE для онтологического моделирования) и специализированные для отдельных онто (например, OBO-Edit для биологических онтологий).
Triple-stores (хранилища RDF): это по сути СУБД, оптимизированные под хранение и запросы RDF-графов. Примеры: GraphDB от Ontotext, Apache Jena TDB/Fuseki, Blazegraph (используется в Wikidata), Virtuoso (используемый в DBpedia), StarDog, Ontology Toolkit и др. 
Триплстор позволяет загрузить множество RDF-триплетов, индексирует их и обеспечивает интерфейс SPARQL для запросов. Многие из них также поддерживают подключение reasoner для материализации выводов (например, GraphDB умеет выполнять RDFS/OWL-разворачивание онтологии)
Инструменты интеграции данных: когда строят БЗ на основе существующих данных, нужны ETL-инструменты, маппинг схем. Например, стандарт R2RML – для отображения реляционных таблиц в RDF-триплеты. Существуют инструменты типа D2RQ,
Ontop – они позволяют на лету представлять SQL-данные как виртуальный RDF.
Это помогает обогащать имеющиеся базы семантикой без полного дублирования данных.
