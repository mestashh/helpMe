Онтология в контексте семантических технологий – это формальное описание концепций некоторой предметной области и отношений между ними. Она задает «словарь» для графа знаний: определяет, какие классы объектов существуют, как они связаны, какие свойства могут иметь.
По сути, онтология обеспечивает основу для структуры графа знаний, определяя правила и термины, организующие этот граф.
Хорошо продуманная онтология гарантирует согласованность и однозначность интерпретации данных в графе, облегчая обмен знаниями между системами. Простейшая онтология может выглядеть как набор классов и связей между ними.
Например, в онтологии для библиотеки можно определить классы Book (Книга), Author (Автор) и свойство hasAuthor (имеет автора) для связи книги с автором.
Онтология задает семантику данных: зная онтологию, система «понимает», что Author – это тип персоны, а отношение hasAuthor указывает на автора книги. Технологии описания онтологий. В Semantic Web разработаны стандарты для явного задания онтологий. Ключевые из них:
RDFS (RDF Schema) – расширение RDF, предназначенное для описания простых онтологий (схем). Позволяет объявлять классы (rdfs:Class), свойства (rdf:Property), отношения наследования классов (rdfs:subClassOf) и свойств (rdfs:subPropertyOf), а также домены и ранжи свойств
(rdfs:domain, rdfs:range). RDFS задает основу иерархии понятий, но выражательные возможности ограничены: можно строить древовидные таксономии, задавать типы и диапазоны значений, однако сложных логических ограничений (например, взаимоисключающие классы, пересечения,
ограничения количества связей) RDFS не предусматривает.
OWL (Web Ontology Language) – более мощный язык онтологий, построенный на основе дескриптивной логики. OWL включает все возможности RDFS, но добавляет множество конструкций для точного описания знаний: можно задавать отношения эквивалентности и несопоставимости классов
(эквивалентные или disjoint-классы), определять ограничения кардинальности (например, «у человека не более двух родителей»), составные классы (пересечения, объединения), характеристики свойств (транзитивность, симметричность, инверсность и др.), а также богатый язык аксиом.
В OWL можно формализовать гораздо более сложные взаимоотношения и правила, чем в RDFS
Таким образом, RDFS часто применяют для простых схем (taxonomies), а OWL – для полноценных онтологий с возможностью логического вывода. Например, используя OWL, можно задать аксиому: «Все люди являются приматами, все приматы – млекопитающие», и reasoner (программа-выводчик)
автоматически выведет, что «Все люди – млекопитающие». Онтологии, описанные на OWL и RDFS, совместимы с RDF-графами: их концепции и отношения сами представляются в виде RDF-триплетов. Благодаря этому граф знаний + онтология образуют самодостаточную машиночитаемую базу знаний:
триплеты данных (ABox) понимаются в контексте триплетов онтологии (TBox). На практике при создании графа знаний часто комбинируются открытые онтологии и собственные. Разработчик может заимствовать из общепринятых онтологий основные понятия (напр. класс Person из FOAF или Organization
из schema.org) и дополнить их специфическими для своей предметной области понятиями. Современные инструменты (например, Protégé) позволяют импортировать существующие онтологии и на их основе создавать частные расширения. Таким образом, грамотное применение онтологий обеспечивает
интероперабельность знаний: разные системы могут обмениваться данными, «зная», что, например, foaf:Person – это человек, и трактуя связи одинаково.
